KISSY.add("overlay", function (a) { var c = a.UIBase, b = a.UA; a.Overlay = c.create([a.UIBase.Box, a.UIBase.ContentBox, a.UIBase.Position, a.UIBase.Loading, b.ie == 6 ? a.UIBase.Shim : null, a.UIBase.Align, a.UIBase.Mask, a.__OverlayEffect], { initializer: function () { }, renderUI: function () { this.get("el").addClass("ks-overlay") }, syncUI: function () { }, bindUI: function () { }, destructor: function () { } }, { ATTRS: { elOrder: 0} }) }, { requires: ["uibase"] }); KISSY.add("dialog", function (a) { a.Dialog = a.UIBase.create(a.Overlay, [a.UIBase.StdMod, a.UIBase.Close, a.UIBase.Drag, a.UIBase.Constrain], { initializer: function () { }, renderUI: function () { var b = this; b.get("el").addClass("ks-dialog"); b.set("handlers", [b.get("header")]) }, bindUI: function () { }, syncUI: function () { }, destructor: function () { } }) }, { host: "overlay" }); KISSY.add("overlay/popup", function (a, c) { function b(d, f) { var e = this; if (a.isUndefined(f)) { f = d } else { f.srcNode = d } b.superclass.constructor.call(e, f) } b.ATTRS = { trigger: null, triggerType: { value: "click"} }; a.extend(b, a.Overlay, { initializer: function () { var d = this; d.trigger = a.one(d.get("trigger")); if (d.trigger) { if (d.get("triggerType") === "mouse") { d._bindTriggerMouse(); d.on("bindUI", function () { d._bindContainerMouse() }) } else { d._bindTriggerClick() } } }, _bindTriggerMouse: function () { var d = this, e = d.trigger, f; d.__mouseEnterPopup = function () { d._clearHiddenTimer(); f = a.later(function () { d.show(); f = c }, 100) }; e.on("mouseenter", d.__mouseEnterPopup); d._mouseLeavePopup = function () { if (f) { f.cancel(); f = c } d._setHiddenTimer() }; e.on("mouseleave", d._mouseLeavePopup) }, _bindContainerMouse: function () { var d = this; d.get("el").on("mouseleave", d._setHiddenTimer, d).on("mouseenter", d._clearHiddenTimer, d) }, _setHiddenTimer: function () { var d = this; d._hiddenTimer = a.later(function () { d.hide() }, 120) }, _clearHiddenTimer: function () { var d = this; if (d._hiddenTimer) { d._hiddenTimer.cancel(); d._hiddenTimer = c } }, _bindTriggerClick: function () { var d = this; d.__clickPopup = function (f) { f.halt(); d.show() }; d.trigger.on("click", d.__clickPopup) }, destructor: function () { var d = this; if (d.trigger) { var e = d.trigger; if (d.__clickPopup) { e.detach("click", d.__clickPopup) } if (d.__mouseEnterPopup) { e.detach("mouseenter", d.__mouseEnterPopup) } if (d._mouseLeavePopup) { e.detach("mouseleave", d._mouseLeavePopup) } } if (d.get("el")) { d.get("el").detach("mouseleave", d._setHiddenTimer, d).detach("mouseenter", d._clearHiddenTimer, d) } } }); a.Popup = b }, { host: "overlay" });
